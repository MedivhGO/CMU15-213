                      | /* $begin code-yso */
                      | /* $begin code-ysa */
                      | # Execution begins at address 0 
  0x000:              | 	.pos 0 
  0x000:              | init:	
  0x000: 30f400010000 | 	irmovl Stack, %esp  	# Set up stack pointer  
  0x006: 30f500010000 | 	irmovl Stack, %ebp  	# Set up base pointer   
  0x00c: 8024000000   | 	call Main		# Execute main program
  0x011: 00           | 	halt			# Terminate program 
                      | 
                      | # Array of 4 elements
  0x014:              | 	.align 4 	
  0x014:              | array:	
  0x014: 0d000000     | 	.long 0xd
  0x018: c0000000     | 	.long 0xc0
  0x01c: 000b0000     | 	.long 0xb00
  0x020: 00a00000     | 	.long 0xa000	
                      | 
  0x024:              | Main:	
  0x024: a05f         | 	pushl %ebp 
  0x026: 2045         | 	rrmovl %esp,%ebp
  0x028: 30f004000000 | 	irmovl $4,%eax	
  0x02e: a00f         | 	pushl %eax		# Push 4
  0x030: 30f214000000 | 	irmovl array,%edx
  0x036: a02f         | 	pushl %edx      	# Push array
  0x038: 803f000000   | 	call Sum		# Sum(array, 4)
  0x03d: d0           | 	leave
  0x03e: 90           | 	ret 
                      | 
                      | /* $begin sum-ys 0 */
                      | 	# int Sum(int *Start, int Count)
  0x03f:              | Sum:	
  0x03f: a05f         | 	pushl %ebp
  0x041: 2045         | 	rrmovl %esp,%ebp
  0x043: 501508000000 | 	mrmovl 8(%ebp),%ecx 	# ecx = Start
  0x049: 50250c000000 | 	mrmovl 12(%ebp),%edx	# edx = Count
  0x04f: 6300         | 	xorl %eax,%eax		# sum = 0
  0x051: 6222         | 	andl   %edx,%edx	# Set condition codes
  0x053: 745a000000   | 	jne     Loop
  0x058:              | Ret:
  0x058: d0           | 	leave
  0x059: 90           | 	ret
  0x05a:              | Loop:
  0x05a: 506100000000 | 	mrmovl (%ecx),%esi	# get *Start
  0x060: 30f304000000 | 	irmovl $4,%ebx          # 
  0x066: 6031         | 	addl %ebx,%ecx          # Start++
  0x068: 30f3ffffffff | 	irmovl $-1,%ebx	        # 
  0x06e: 6060         | 	addl %esi,%eax          # add to sum
  0x070: 6032         | 	addl %ebx,%edx          # Count--
  0x072: 745a000000   | 	jne    Loop             # Stop when 0
  0x077: 7058000000   | 	jmp	Ret
                      | 
                      | /* $end sum-ys 0 */
                      | 
                      | # The stack starts here and grows to lower addresses
  0x100:              | 	.pos 0x100		
  0x100:              | Stack:	 
                      | /* $end code-ysa */
                      | /* $end code-yso */
